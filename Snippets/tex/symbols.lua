local luasnip = require("luasnip")
local s = luasnip.snippet
local t = luasnip.text_node

return {
  -- Greek letters
  s("alpha", t("\\alpha")),
  s("beta", t("\\beta")),
  s("gamma", t("\\gamma")),
  s("delta", t("\\delta")),
  s("epsilon", t("\\epsilon")),
  s("zeta", t("\\zeta")),
  s("eta", t("\\eta")),
  s("theta", t("\\theta")),
  s("iota", t("\\iota")),
  s("kappa", t("\\kappa")),
  s("lambda", t("\\lambda")),
  s("mu", t("\\mu")),
  s("nu", t("\\nu")),
  s("xi", t("\\xi")),
  s("pi", t("\\pi")),
  s("rho", t("\\rho")),
  s("sigma", t("\\sigma")),
  s("tau", t("\\tau")),
  s("upsilon", t("\\upsilon")),
  s("phi", t("\\phi")),
  s("chi", t("\\chi")),
  s("psi", t("\\psi")),
  s("omega", t("\\omega")),

  -- Mathematical symbols
  s("infty", t("\\infty")),
  s("partial", t("\\partial")),
  s("nabla", t("\\nabla")),
  s("pm", t("\\pm")),
  s("mp", t("\\mp")),
  s("times", t("\\times")),
  s("div", t("\\div")),
  s("cdot", t("\\cdot")),
  s("leq", t("\\leq")),
  s("geq", t("\\geq")),
  s("neq", t("\\neq")),
  s("approx", t("\\approx")),
  s("equiv", t("\\equiv")),
  s("in", t("\\in")),
  s("notin", t("\\notin")),
  s("subset", t("\\subset")),
  s("supset", t("\\supset")),
  s("subseteq", t("\\subseteq")),
  s("supseteq", t("\\supseteq")),
  s("cup", t("\\cup")),
  s("cap", t("\\cap")),
  s("emptyset", t("\\emptyset")),
  s("forall", t("\\forall")),
  s("exists", t("\\exists")),
  
  -- Arrows
  s("rightarrow", t("\\rightarrow")),
  s("leftarrow", t("\\leftarrow")),
  s("leftrightarrow", t("\\leftrightarrow")),
  s("Rightarrow", t("\\Rightarrow")),
  s("Leftarrow", t("\\Leftarrow")),
  s("Leftrightarrow", t("\\Leftrightarrow")),
}
